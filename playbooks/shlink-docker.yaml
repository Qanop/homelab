- name: Install Shlink
  hosts: all
  become: yes
  serial: 1
  tasks:
    # ####################################
    # Shrink MySQL
    # ####################################
    - name: Start/Update MariaDB container
      docker_container:
        name: shlinkdb
        image: "yobasystems/alpine-mariadb:latest"
        pull: yes
        restart_policy: unless-stopped
        labels:
          traefik.enable: "false"
        env:
          TZ: "{{ timezone }}"
          MYSQL_DATABASE: "shlink"
          MYSQL_ROOT_PASSWORD: "{{ shlink_database_password }}"
        volumes:
          - "/home/{{ ansible_user }}/shlink/mysql:/var/lib/mysql"
        log_driver: json-file
        log_options:
          max-size: "10m"
          max-file: "5"

    # ####################################
    # Shrink Server
    # ####################################
    - name: Start/Update Shlink container
      docker_container:
        name: shlink
        image: "shlinkio/shlink:stable"
        pull: yes
        restart_policy: unless-stopped
        labels:
          traefik.http.routers.shlink.service: "shlink"
          traefik.http.routers.shlink.rule: "Host(`shlink.{{ local_domain }}`)"
          traefik.http.routers.shlink.middlewares: "ip-whitelist@file"
          traefik.http.routers.shlink.entrypoints: "web"
          traefik.http.services.shlink.loadbalancer.server.port: "8080"

          # Push to public
          traefik.http.routers.shlink-http.service: "shlink"
          traefik.http.routers.shlink-http.rule: "Host(`{{ shlink_public_fqdn }}`)"
          traefik.http.routers.shlink-http.middlewares: "redirect-to-https@file"
          traefik.http.routers.shlink-http.entrypoints: "web"

          traefik.http.routers.shlink-secure.service: "shlink"
          traefik.http.routers.shlink-secure.rule: "Host(`{{ shlink_public_fqdn }}`)"
          traefik.http.routers.shlink-secure.tls: "true"
          traefik.http.routers.shlink-secure.tls.certresolver: "master"
          traefik.http.routers.shlink-secure.entrypoints: "websecure"
        env:
          TZ: "{{ timezone }}"
          DEFAULT_DOMAIN: "{{ shlink_public_fqdn }}"
          IS_HTTPS_ENABLED: "false"
          GEOLITE_LICENSE_KEY: "{{ geolite_license_key }}"
          DB_DRIVER: "mysql"
          DB_HOST: "shlinkdb"
          DB_USER: "root"
          DB_PASSWORD: "{{ shlink_database_password }}"
        published_ports:
          - "{{ shlink_port }}:8080"
        links:
          - shlinkdb
        log_driver: json-file
        log_options:
          max-size: "10m"
          max-file: "5"

    # ####################################
    # Shlink Client
    # ####################################
    - name: Start/Update Shlink Client container
      docker_container:
        name: shlinkclient
        image: "shlinkio/shlink-web-client"
        pull: yes
        restart_policy: unless-stopped
        labels:
          traefik.http.routers.shlinkclient.service: "shlinkclient"
          traefik.http.routers.shlinkclient.rule: "Host(`shlink-client.{{ local_domain }}`)"
          traefik.http.routers.shlinkclient.middlewares: "ip-whitelist@file"
          traefik.http.routers.shlinkclient.entrypoints: "web"
          traefik.http.services.shlinkclient.loadbalancer.server.port: "80"

          traefik.http.routers.shlinkadmin.service: "shlinkclient"
          traefik.http.routers.shlinkadmin.rule: "Host(`shlink-admin.{{ local_domain }}`)"
          traefik.http.routers.shlinkadmin.middlewares: "ip-whitelist@file"
          traefik.http.routers.shlinkadmin.entrypoints: "web"
        env:
          TZ: "{{ timezone }}"
          SHLINK_SERVER_URL: "https://{{ shlink_public_fqdn }}"
          SHLINK_SERVER_API_KEY: "{{ shlink_server_api_key }}"
        published_ports:
          - "{{ shlink_client_port }}:80"
        log_driver: json-file
        log_options:
          max-size: "10m"
          max-file: "5"
    - name: Check container health
      uri:
        url: http://localhost:{{ shlink_client_port }}
      register: result
      until: result.status == 200
      retries: 5
      delay: 10

    # ####################################
    # Clear
    # ####################################
    - name: Remove old image versions
      docker_prune:
        images: yes
        images_filters:
          dangling: false
    