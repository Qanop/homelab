- name: Install Jellyseerr
  hosts: mediarr
  become: yes
  serial: 1
  tasks:
    - import_tasks: mediarr-setup.yaml

    # ####################################
    # Prepare files
    # ####################################
    - name: Create Jellyseerr config directory
      file:
        path:  /home/{{ ansible_user }}/docker_configs/jellyseerr
        state: directory

    # ####################################
    # Run container
    # ####################################
    - name: Start/Update Jellyseerr container
      when: mediarr.jellyseerr.enabled == true
      docker_container:
        name: jellyseerr
        image: fallenbagel/jellyseerr:latest
        pull: yes
        restart_policy: unless-stopped
        env:
          TZ: "{{ timezone }}"
        labels:
          traefik.http.routers.jellyseerr.service: "jellyseerr"
          traefik.http.routers.jellyseerr.rule: "Host(`jellyseerr.{{ local_domain }}`)"
          traefik.http.routers.jellyseerr.middlewares: "ip-whitelist@file"
          traefik.http.routers.jellyseerr.entrypoints: "web"
          traefik.http.services.jellyseerr.loadbalancer.server.port: "5055"
        published_ports:
          - "{{ mediarr.jellyseerr.port }}:5055"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "/home/{{ ansible_user }}/docker_configs/jellyseerr:/app/config"
        networks:
          - name: mediarr
            aliases:
              - jellyseerr
        log_driver: json-file
        log_options:
          max-size: "10m"
          max-file: "5"
    - name: Check container health
      uri:
        url: http://localhost:{{ mediarr.jellyseerr.port }}
      register: result
      until: result.status == 200
      retries: 5
      delay: 10

    # ####################################
    # Prune
    # ####################################
    - name: Remove old image versions
      docker_prune:
        images: yes
        images_filters:
          dangling: false
